<program> ::= <function>*

<function> ::= <type> <identifier> "(" <parameters> ")" "{" <statements> "}"

<parameters> ::= <parameter> ("," <parameter>)*
<parameters> ::= ε

<parameter> ::= <type> <identifier>

<statements> ::= <statement>*
<statements> ::= ε

<statement> ::= <variable_declaration>
<statement> ::= <assignment>
<statement> ::= <if_statement>
<statement> ::= <loop_statement>
<statement> ::= <function_call>
<statement> ::= <return_statement>

<variable_declaration> ::= <type> <identifier> ("=" <expression>)? ";"
<variable_declaration> ::= <type> <identifier> ";"

<assignment> ::= <identifier> "=" <expression> ";"

<if_statement> ::= "if" "(" <expression> ")"
<if_statement> ::= "if" "(" <expression> ")" "{" <statements> "}" "else" "{" <statements> "}"

<loop_statement> ::= "luloop" "(" <expression> ")"

<function_call> ::= <identifier> "(" <arguments> ")" ";"

<return_statement> ::= "return" <expression> ";"

<expression> ::= <term> (<operator> <term>)*
<expression> ::= <term>

<term> ::= <identifier>
<term> ::= <number>
<term> ::= <string_literal>
<term> ::= "(" <expression> ")"

<operator> ::= "+" | "-" | "*" | "/" | "%"
<operator> ::= ">" | "<" | ">=" | "<=" | "==" | "!="
<operator> ::= "and" | "or" | "not"

<type> ::= "int" | "double" | "array" | "void" | "str"

<identifier> ::= [a-zA-Z_][a-zA-Z0-9_]*

<number> ::= [0-9]+ ("." [0-9]+)?

<string_literal> ::= '"' (any_character_except_quote)* '"'

<separator> ::= ";" | "," | "(" | ")" | "{" | "}" | "[" | "]"

<comment> ::= "//" (any_character_except_newline)* "\n"

<array_index> ::= <identifier> "[" <expression> "]" | <number> "[" <expression> "]"

<element_list> ::= <expression> ("," <expression>)*
<array_init> ::= "{" <element_list> "}" ";"

<array_assignment> ::= <identifier> "[" <expression> "]" "=" <expression> ";"